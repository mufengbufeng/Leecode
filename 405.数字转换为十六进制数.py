#
# @lc app=leetcode.cn id=405 lang=python3
#
# [405] 数字转换为十六进制数
#

# @lc code=start
class Solution:
    def toHex(self, num: int) -> str:
        if num == 0: return '0'
        res = ''
        map = '0123456789abcdef'
        if num < 0: num += 2 ** 32 # num 如果是负数，转换成正数   2 ** 32 = 4294967296 如： -1 + 4294967296 = 4294967295   
        while num > 0:
            digit = num % 16 # 4294967295 % 16 = 15     268435456 % 16 = 0  16777216 % 16 = 0 1048576 % 16 = 0 65536 % 16 =  0 4096 % 16 = 0  256 % 16 = 0 16 % 16 = 0 1 % 16 = 1
            num = (num - digit) // 16 # 4294967295 // 16 = 268435456   268435456 // 16 = 16777216 16777216 // 16 = 104857 1048576 // 16 = 65536  65536 // 16 = 4096 4096 // 16 = 256 256 // 16 = 16 16 // 16 = 1 1 // 16 = 0
            res += str(map[digit]) # map[15] = 'f'  map[0] = '0' map[0] = '0' map[0] = '0' map[0] = '0' map[0] = '0' map[0] = '0' map[0] = '0' map[0] = '0' map[1] = '1'
        return res[::-1] # 'f'
    

# @lc code=end

